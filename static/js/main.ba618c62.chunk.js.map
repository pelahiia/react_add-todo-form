{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","preparedTodos","userId","usersFromServer","find","App","useState","setToDos","setTitle","setUserId","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","state","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"4OAOaA,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCHMI,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCC,EAIED,EAJFC,MACAP,EAGEM,EAHFN,KACAQ,EAEEF,EAFFE,UACAC,EACEH,EADFG,GAGF,OACE,0BACE,UAASA,EACTN,UAAWO,IAAW,WACpB,CAAC,sBAAuBF,IAH5B,UAME,oBAAIL,UAAU,kBAAd,SACGI,IAGFP,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCpBlBW,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAAST,UAAU,WAAnB,SACGS,EAAMC,KAAI,SAAAP,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKG,UCZb,GACb,CACEA,GAAI,EACJR,KAAM,gBACNa,SAAU,OACVZ,MAAO,qBAET,CACEO,GAAI,EACJR,KAAM,eACNa,SAAU,YACVZ,MAAO,qBAET,CACEO,GAAI,EACJR,KAAM,mBACNa,SAAU,WACVZ,MAAO,sBAET,CACEO,GAAI,EACJR,KAAM,mBACNa,SAAU,WACVZ,MAAO,6BAET,CACEO,GAAI,EACJR,KAAM,mBACNa,SAAU,SACVZ,MAAO,4BAET,CACEO,GAAI,EACJR,KAAM,uBACNa,SAAU,mBACVZ,MAAO,2BAET,CACEO,GAAI,EACJR,KAAM,kBACNa,SAAU,eACVZ,MAAO,0BAET,CACEO,GAAI,EACJR,KAAM,2BACNa,SAAU,gBACVZ,MAAO,wBAET,CACEO,GAAI,EACJR,KAAM,kBACNa,SAAU,WACVZ,MAAO,2BAET,CACEO,GAAI,GACJR,KAAM,qBACNa,SAAU,iBACVZ,MAAO,2BCpDLa,ECPS,CACb,CACEN,GAAI,EACJF,MAAO,qBACPC,WAAW,EACXQ,OAAQ,GAEV,CACEP,GAAI,GACJF,MAAO,kBACPC,WAAW,EACXQ,OAAQ,GAEV,CACEP,GAAI,EACJF,MAAO,qCACPC,WAAW,EACXQ,OAAQ,IDVkCH,KAAI,SAAAP,GAAI,kCACjDA,GADiD,IAEpDN,KAAMiB,EAAgBC,MAAK,SAAAlB,GAAI,OAAKM,EAAKU,SAAWhB,EAAKS,OAAQ,UAGtDU,EAAM,WACjB,MAA0BC,mBAASL,GAAnC,mBAAOH,EAAP,KAAcS,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOb,EAAP,KAAce,EAAd,KACA,EAA4BF,mBAAS,KAArC,mBAAOJ,EAAP,KAAeO,EAAf,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KAyCA,OACE,sBAAKxB,UAAU,MAAf,UACE,+CAEA,uBACEyB,OAAO,aACPC,OAAO,OACPC,SA/BW,SAACC,GAChBA,EAAMC,iBAVDzB,GACHkB,GAAc,GAGD,MAAXT,GACFW,GAAa,GAVfL,EAAS,IACTC,EAAU,KAkBV,IAAMU,EAAU,CACdxB,GAAKyB,KAAKC,IAAL,MAAAD,KAAI,YAAQtB,EAAMC,KAAI,SAAAP,GAAI,OAAIA,EAAKG,QAAO,EAC/CF,QACAC,WAAW,EACXQ,QAASA,EACThB,KAAMiB,EAAgBC,MAAK,SAAAlB,GAAI,OAAIA,EAAKS,MAAQO,MAAW,MAG7DK,GAAS,SAAAe,GACP,MAAM,GAAN,mBACMA,GADN,CAEIH,OAINX,EAAS,IACTC,EAAU,MAOR,UAKE,sBAAKpB,UAAU,QAAf,UACG,UACD,uBACEkC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOhC,EACPiC,SAAU,SAACT,GACTT,EAASS,EAAMU,OAAOF,UAGzBf,GAAc,sBAAMrB,UAAU,QAAhB,qCAGjB,sBAAKA,UAAU,QAAf,UACG,SACD,yBACE,UAAQ,aACRoC,MAAOvB,EACPwB,SAAU,SAACT,GACTR,EAAUQ,EAAMU,OAAOF,QAJ3B,UAOE,wBACEA,MAAM,IACNG,UAAQ,EAFV,2BAMCzB,EAAgBJ,KAAI,SAAAb,GAAI,OACvB,wBAAQuC,MAAOvC,EAAKS,GAApB,SACGT,EAAKC,MADqBD,EAAKS,UAMrCiB,GAAa,sBAAMvB,UAAU,QAAhB,qCAGhB,wBACEkC,KAAK,SACL,UAAQ,eAFV,oBAOF,cAAC,EAAD,CAAUzB,MAAOA,QE9GvB+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ba618c62.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { ToDo } from '../../types/ToDo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: ToDo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    user,\n    completed,\n    id\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo',\n        {'TodoInfo--completed': completed,\n        })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { ToDo } from '../../types/ToDo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: ToDo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { ToDo } from './types/ToDo';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst preparedTodos: ToDo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(user => (todo.userId === user.id)) || null,\n}));\n\nexport const App = () => {\n  const [todos, setToDos] = useState(preparedTodos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('0');\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const clearForm = () => {\n    setTitle('');\n    setUserId('0');\n  };\n\n  const errors = () => {\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (userId === '0') {\n      setUserError(true);\n    }\n  };\n\n  const onSubmit = (event:React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    errors();\n    clearForm();\n\n    const newTodo = {\n      id: (Math.max(...todos.map(todo => todo.id)) + 1),\n      title,\n      completed: false,\n      userId: +userId,\n      user: usersFromServer.find(user => user.id === +userId) || null,\n    };\n\n    setToDos(state => {\n      return (\n        [...state,\n          newTodo]\n      );\n    });\n\n    setTitle('');\n    setUserId('0');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          {'Title: '}\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          {'User: '}\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(event.target.value);\n            }}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}